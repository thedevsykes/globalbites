package com.example.globalbites;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.NavUtils;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ListView;

public class RecipeList extends food2forkApi implements OnClickListener {

	private ArrayList<Recipe> recipeList = new ArrayList<Recipe>();
	private String m_country;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_recipe_list);
		// Show the Up button in the action bar.
		setupActionBar();
		
		Intent intent = getIntent(); 
		m_country = intent.getExtras().getString("country");
		
		//Pre-Set Search Term
		searchForRecipes(m_country);
	}

	/**
	 * Set up the {@link android.app.ActionBar}.
	 */
	private void setupActionBar() {

		getActionBar().setDisplayHomeAsUpEnabled(true);

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onClick(View v) 
	{
		// TODO Auto-generated method stub	
	}

	@Override
	public void onReturnData(JSONObject jObj) throws JSONException
	{
		super.onReturnData(jObj);
		JSONArray array = jObj.getJSONArray("recipes");
		
		// Check to see if any results have been returned. 
		if ( array.length() == 0 )
		{
			// Note: Need to display only a string. This method isn't 
			// really practical as we don't want to try to get a recipe
			// from a no results found response. Change before release.
			recipeList.add(new Recipe(1, "...", "No results found", "..."));
		}
		else 
		{
			for (int i = 0; i < array.length(); i++ )
			{	
				JSONObject obj = (JSONObject) array.get(i);
				
				// Note: Remove ID. It's not really required. 
				recipeList.add(new Recipe(1, obj.getString("image_url"), 
							  obj.getString("title"), 
							  obj.getString("publisher")));
			}
			
			AdapterRecipe recipeAdapter = new AdapterRecipe(this, 0, recipeList);
			
			ListView listView = (ListView) findViewById(R.id.recipe_list_view);
			listView.setAdapter(recipeAdapter);
		}
		
		jObj.toString();
	}	
}
